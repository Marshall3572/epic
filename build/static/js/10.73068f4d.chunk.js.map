{"version":3,"sources":["pages/Login.js"],"names":["Wrapper","styled","div","Title","h1","Component","AuthStore","useStores","history","useHistory","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","setUsername","username","setPassword","password","login","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","offset","type","htmlType"],"mappings":"yMAMMA,EAAUC,IAAOC,IAAV,2SAOPC,EAAQF,IAAOG,GAAV,2EAmGIC,UA9FG,WAEhB,IAAOC,EAAaC,cAAbD,UACDE,EAAUC,cA0BhB,OACE,eAACT,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,CACEO,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,cAAe,CACbC,UAAU,GAEZC,SAvCW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBX,EAAUc,YAAYH,EAAOI,UAC7Bf,EAAUgB,YAAYL,EAAOM,UAC7BjB,EAAUkB,QACPC,MAAK,WACJP,QAAQC,IAAI,4DACZX,EAAQkB,KAAK,QACZC,OAAM,WACTT,QAAQC,IAAI,oEA+BVS,eA3BiB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,IAcrB,UAcE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCACR,CACDC,UAhCa,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,oGACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,qFAC1DD,QAAQG,aAqBX,SAYE,cAAC,IAAD,MAEF,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCACR,CACDS,IAAK,EACLT,QAAS,yCACR,CACDU,IAAK,GACLV,QAAS,+CAZf,SAgBE,cAAC,IAAMW,SAAP,MAGF,cAAC,IAAKf,KAAN,CACEjB,WAAY,CACViC,OAAQ,EACRlC,KAAM,IAHV,SAME,cAAC,IAAD,CAAQmC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/10.73068f4d.chunk.js","sourcesContent":["import {Form, Input, Button, Checkbox} from 'antd'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useStores} from '../stores'\nimport {useHistory} from 'react-router-dom'\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2\\);\n  border-radius: 4px;\n  padding: 20px;\n`\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst Component = () => {\n\n  const {AuthStore} = useStores()\n  const history = useHistory()\n  const onFinish = (values) => {\n    console.log('Success:', values)\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.login()\n      .then(() => {\n        console.log('登陆成功, 跳转到首页')\n        history.push('/')\n      }).catch(() => {\n      console.log('登录失败，什么都不做')\n    })\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n\n  const validateUsername = (rule, value) => {\n    if (/\\W/.test(value)) return Promise.reject('不能出现字母数字下划线以外的字符')\n    if (value.length < 4 || value.length > 10) return Promise.reject('用户名长度要在4～10个字符之间')\n    return Promise.resolve()\n  }\n  // 箭头函数后加()是因为返回了一个对象，不加会被理解为函数体\n\n  return (\n    <Wrapper>\n      <Title>登陆</Title>\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 6,\n        }}\n        wrapperCol={{\n          span: 18,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: '请输入用户名',\n            }, {\n              validator: validateUsername\n            }\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: '请输入密码',\n            }, {\n              min: 4,\n              message: '密码最少4位数'\n            }, {\n              max: 10,\n              message: '密码最多十位数'\n            }\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 6,\n            span: 18,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  )\n}\n\nexport default Component"],"sourceRoot":""}