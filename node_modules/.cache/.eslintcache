[{"/Users/marshall/Desktop/epic-react/epic/src/index.js":"1","/Users/marshall/Desktop/epic-react/epic/src/reportWebVitals.js":"2","/Users/marshall/Desktop/epic-react/epic/src/App.js":"3","/Users/marshall/Desktop/epic-react/epic/src/components/Loading.js":"4","/Users/marshall/Desktop/epic-react/epic/src/components/Footer.js":"5","/Users/marshall/Desktop/epic-react/epic/src/components/Header.js":"6","/Users/marshall/Desktop/epic-react/epic/src/pages/Home.js":"7","/Users/marshall/Desktop/epic-react/epic/src/pages/Login.js":"8","/Users/marshall/Desktop/epic-react/epic/src/pages/Register.js":"9","/Users/marshall/Desktop/epic-react/epic/src/pages/About.js":"10","/Users/marshall/Desktop/epic-react/epic/src/pages/History.js":"11","/Users/marshall/Desktop/epic-react/epic/src/components/Tips.js":"12","/Users/marshall/Desktop/epic-react/epic/src/components/Uploader.js":"13","/Users/marshall/Desktop/epic-react/epic/src/components/List.js":"14","/Users/marshall/Desktop/epic-react/epic/src/stores/index.js":"15","/Users/marshall/Desktop/epic-react/epic/src/stores/image.js":"16","/Users/marshall/Desktop/epic-react/epic/src/stores/history.js":"17","/Users/marshall/Desktop/epic-react/epic/src/stores/auth.js":"18","/Users/marshall/Desktop/epic-react/epic/src/stores/user.js":"19","/Users/marshall/Desktop/epic-react/epic/src/models/index.js":"20"},{"size":330,"mtime":1627199779335,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1627199779337,"results":"23","hashOfConfig":"22"},{"size":1542,"mtime":1627199779334,"results":"24","hashOfConfig":"22"},{"size":132,"mtime":1627199779335,"results":"25","hashOfConfig":"22"},{"size":301,"mtime":1627199779334,"results":"26","hashOfConfig":"22"},{"size":2073,"mtime":1627199779334,"results":"27","hashOfConfig":"22"},{"size":422,"mtime":1627199779336,"results":"28","hashOfConfig":"22"},{"size":2712,"mtime":1627199779336,"results":"29","hashOfConfig":"22"},{"size":3293,"mtime":1627199779337,"results":"30","hashOfConfig":"22"},{"size":131,"mtime":1627199779336,"results":"31","hashOfConfig":"22"},{"size":155,"mtime":1627199779336,"results":"32","hashOfConfig":"22"},{"size":486,"mtime":1627199779335,"results":"33","hashOfConfig":"22"},{"size":3920,"mtime":1627199779335,"results":"34","hashOfConfig":"22"},{"size":1608,"mtime":1627199779334,"results":"35","hashOfConfig":"22"},{"size":559,"mtime":1627199779338,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1627199779338,"results":"37","hashOfConfig":"22"},{"size":871,"mtime":1627199779337,"results":"38","hashOfConfig":"22"},{"size":1570,"mtime":1627199779337,"results":"39","hashOfConfig":"22"},{"size":434,"mtime":1627199779338,"results":"40","hashOfConfig":"22"},{"size":1803,"mtime":1627199779336,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13003hw",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/Users/marshall/Desktop/epic-react/epic/src/index.js",[],"/Users/marshall/Desktop/epic-react/epic/src/reportWebVitals.js",[],"/Users/marshall/Desktop/epic-react/epic/src/App.js",[],"/Users/marshall/Desktop/epic-react/epic/src/components/Loading.js",[],"/Users/marshall/Desktop/epic-react/epic/src/components/Footer.js",[],"/Users/marshall/Desktop/epic-react/epic/src/components/Header.js",["92"],"import React, {useState} from 'react'\nimport LogoUrl from '../logo.svg'\nimport {NavLink, useHistory} from 'react-router-dom'\nimport styled from 'styled-components'\nimport {Button} from 'antd'\nimport {useStores} from '../stores'\nimport {observer} from 'mobx-react'\n\n// header是styled的方法，` `里是params\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 100px;\n  background-color: #02101f;\n`\nconst Logo = styled.img`\n  height: 30px\n`\n// 注意这里的不同\nconst StyledLink = styled(NavLink)`\n  color: #fff;\n  margin-left: 30px;\n\n  &.active {\n    border-bottom: 1px solid #fff;\n  }\n`\n\nconst Login = styled.div`\n  margin-left: auto;\n`\nconst StyledButton = styled(Button)`\n  margin-left: 10px;\n`\n\nconst Component = observer(() => {\n\n    const history = useHistory()\n    const {UserStore, AuthStore} = useStores()\n\n    const handleLogout = () => {\n      AuthStore.logout()\n    }\n\n    const handleRegister = () => {\n      console.log('跳转到注册页面')\n      history.push('/register')\n    }\n\n    const handleLogin = () => {\n      console.log('跳转到登陆页面')\n      history.push('/login')\n    }\n\n    return (\n      <Header>\n        <Logo src={LogoUrl}/>\n        <nav>\n          {/*activeClassName是navLink特有的*/}\n          <StyledLink exact to=\"/\" activeClassName=\"active\">首页</StyledLink>\n          <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\n          <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\n        </nav>\n        <Login>\n          {\n            UserStore.currentUser ? <>\n                {UserStore.currentUser.attributes.username}\n                <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\n              </>\n              : <>\n                <StyledButton type=\"primary\" onClick={handleLogin}>登陆</StyledButton>\n                <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n              </>\n          }\n        </Login>\n      </Header>\n    )\n  }\n)\nexport default Component\n\n","/Users/marshall/Desktop/epic-react/epic/src/pages/Home.js",["93"],"import React from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores'\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Tips'\n\nexport default observer(() => {\n  const {UserStore} = useStores()\n  const User = () => <>Hello~{UserStore.currentUser.attributes.username}</>\n  return (\n    <>\n      <Tips>请先登陆在上传</Tips>\n      <Uploader />\n    </>\n  )\n}\n)\n\n\n\n","/Users/marshall/Desktop/epic-react/epic/src/pages/Login.js",["94"],"import {Form, Input, Button, Checkbox} from 'antd'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useStores} from '../stores'\nimport {useHistory} from 'react-router-dom'\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2\\);\n  border-radius: 4px;\n  padding: 20px;\n`\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst Component = () => {\n\n  const {AuthStore} = useStores()\n  const history = useHistory()\n  const onFinish = (values) => {\n    console.log('Success:', values)\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.login()\n      .then(() => {\n        console.log('登陆成功, 跳转到首页')\n        history.push('/')\n      }).catch(() => {\n      console.log('登录失败，什么都不做')\n    })\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n\n  const validateUsername = (rule, value) => {\n    if (/\\W/.test(value)) return Promise.reject('不能出现字母数字下划线以外的字符')\n    if (value.length < 4 || value.length > 10) return Promise.reject('用户名长度要在4～10个字符之间')\n    return Promise.resolve()\n  }\n  // 箭头函数后加()是因为返回了一个对象，不加会被理解为函数体\n\n  return (\n    <Wrapper>\n      <Title>登陆</Title>\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 6,\n        }}\n        wrapperCol={{\n          span: 18,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: '请输入用户名',\n            }, {\n              validator: validateUsername\n            }\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: '请输入密码',\n            }, {\n              min: 4,\n              message: '密码最少4位数'\n            }, {\n              max: 10,\n              message: '密码最多十位数'\n            }\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 6,\n            span: 18,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  )\n}\n\nexport default Component","/Users/marshall/Desktop/epic-react/epic/src/pages/Register.js",[],"/Users/marshall/Desktop/epic-react/epic/src/pages/About.js",[],"/Users/marshall/Desktop/epic-react/epic/src/pages/History.js",["95"],"import React from 'react'\nimport List from '../components/List'\n\nexport default() => {\n  return (\n    <>\n      <h1>History</h1>\n      <List/>\n    </>\n  )\n}","/Users/marshall/Desktop/epic-react/epic/src/components/Tips.js",[],"/Users/marshall/Desktop/epic-react/epic/src/components/Uploader.js",["96","97","98"],"import React, {useRef} from 'react'\nimport {useStores} from '../stores'\nimport {observer, useLocalStore} from 'mobx-react'\nimport {InboxOutlined} from '@ant-design/icons'\nimport {Upload, message, Spin} from 'antd'\nimport styled from 'styled-components'\nimport image from '../stores/image'\n\nconst {Dragger} = Upload\n\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n`\nconst H1 = styled.h1`\n  margin: 20px 0;\n  text-align: center;\n`\nconst Image = styled.img`\n  max-width: 300px;\n`\n\n\nconst Component = observer(() => {\n    const {ImageStore, UserStore} = useStores()\n    const ref1 = useRef(), ref2 = useRef()\n    // 返回值要加个括号，不然会被理解为函数体\n    const store = useLocalStore(() => ({\n      width: null,\n      height: null,\n      get widthStr() {\n        return store.width ? `/w/${store.width}` : ''\n      },\n      get heightStr() {\n        return store.height ? `/h/${store.height}` : ''\n      },\n      get fullStr() {\n        return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\n      },\n      setHeight(height) {\n        store.height = height\n      },\n      setWidth(width) {\n        store.width = width\n      },\n    }))\n\n    const bindWidthChange = () => {\n      store.setWidth(ref1.current.value)\n    }\n    const bindHeightChange = () => {\n      store.setHeight(ref2.current.value)\n    }\n    const props = {\n      showUploadList: false,\n      beforeUpload: file => {\n        ImageStore.setFile(file)\n        ImageStore.setFilename(file.name)\n        if (UserStore.currentUser == null) {\n          message.warning('请先登陆再上传')\n          return false\n        }\n        // 可以在控制台看到文件的api\n        window.file = file\n\n        // .ig是指忽略大小写\n        if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n          message.error('只能上传.png/.gif/.jpg/.svg格式的图片')\n          return false\n        }\n        if (file.size > 1024 * 1024) {\n          message.error('最大上传1M图片')\n          return false\n        }\n        ImageStore.upload()\n          .then((serverFile) => {\n              console.log('上传成功')\n            }\n          ).catch(() => console.log('上传失败'))\n        return false\n      }\n    }\n\n    return (\n      <div>\n        <Spin tip='上传中' spinning={ImageStore.isUploading}>\n          <Dragger {...props}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined/>\n            </p>\n            <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\n            <p className=\"ant-upload-hint\">\n              仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\n            </p>\n          </Dragger>\n        </Spin>\n        {\n          ImageStore.serverFile ?\n            <Result>\n              <H1>上传结果</H1>\n              <dl>\n                <dt>线上地址</dt>\n                <dd><a target=\"_blank\"\n                       href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a>\n                </dd>\n                <dt>文件名</dt>\n                <dd>{ImageStore.filename}</dd>\n                <dt>图片预览</dt>\n                <dd>\n                  <Image src={ImageStore.serverFile.attributes.url.attributes.url}/>\n                </dd>\n                <dt>更多尺寸</dt>\n                <dd>\n                  <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度（可选）\"/>\n                  <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度（可选）\"/>\n                </dd>\n                <dd>\n                  <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\n                </dd>\n              </dl>\n            </Result> : null\n        }\n      </div>\n    )\n  }\n)\n\nexport default Component","/Users/marshall/Desktop/epic-react/epic/src/components/List.js",["99","100"],"import React, {useEffect} from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport {List, Spin} from 'antd'\nimport styled from 'styled-components'\n\nconst Img = styled.img`\n  width: 100px;\n  height: 120px;\n  object-fit: contain;\n  border: 1px solid #eee;\n`\n\nexport default observer(() => {\n  const {HistoryStore} = useStores()\n  const loadMore = () => {\n    HistoryStore.find()\n  }\n\n  useEffect(() => {\n    console.log('进入组件时执行')\n    return () => {\n      console.log('卸载')\n      HistoryStore.reset()\n    }\n  }, [])\n  const options = {\n    initialLoad: true,\n    pageStart: 0,\n    loadMore: loadMore,\n    hasMore: !HistoryStore.isLoading && HistoryStore.hasMore,\n    useWindow: true\n  }\n\n  return (\n    <InfiniteScroll {...options}>\n      <List dataSource={HistoryStore.list}\n            renderItem={\n              item => (<List.Item key={item.id}>\n                <div>\n                  <Img src={item.attributes.url.attributes.url}/>\n                </div>\n                <div>\n                  <h5>{item.attributes.filename}</h5>\n                </div>\n                <div>\n                  <a target=\"_blank\" href={item.attributes.url.attributes.url}>{item.attributes.url.attributes.url}</a>\n                </div>\n              </List.Item>)\n            }>\n        {HistoryStore.isLoading && HistoryStore.hasMore && (\n          <div>\n            <Spin tips={'加载中...'}/>\n          </div>\n        )}\n      </List>\n      {HistoryStore.isLoading && HistoryStore}\n    </InfiniteScroll>\n  )\n})","/Users/marshall/Desktop/epic-react/epic/src/stores/index.js",["101"],"// 总入口，把各种状态进行一个统一的导出\nimport React, { createContext, useContext } from 'react';\nimport AuthStore from './auth';\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\n\nconst context = createContext({\n  // AuthStore: new AuthStore()\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n});\n\n// 测试：这样我们就可以在控制台看到数据\nwindow.stores = {\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n}\n\nexport const useStores= () => useContext(context);","/Users/marshall/Desktop/epic-react/epic/src/stores/image.js",["102"],"import React from 'react'\nimport {observable, action, makeObservable} from 'mobx'\nimport {Uploader} from '../models'\nimport {message} from 'antd'\n\nclass ImageStore {\n  constructor() {\n    makeObservable(this)\n  }\n\n  @observable filename = ''\n  @observable file = null\n  @observable isUploading = false\n  @observable serverFile = null\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile\n  }\n\n  @action upload() {\n    this.isUploading = true\n    // 若上传失败，上传结果展示的还是上次的结果，会让人产生误会，所以每次上传都清空一下\n    this.serverFile = null\n\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename).then(serverFile => {\n        this.serverFile = serverFile\n        resolve(serverFile)\n      }).catch(err => {\n        message.error('上传失败')\n        reject(err)\n      }).finally(() => {\n        this.isUploading = false\n      })\n    })\n  }\n\n  @action reset() {\n    this.isUploading = false\n    this.serverFile = null\n  }\n}\n\n\n// export { UserStore } 不能直接这么写，最好是直接导出一个对象\nexport default new ImageStore()\n","/Users/marshall/Desktop/epic-react/epic/src/stores/history.js",["103"],"import React from 'react'\nimport {Uploader} from '../models'\nimport {message} from 'antd'\nimport {action, observable} from 'mobx'\n\nclass HistoryStore {\n  @observable list = []\n  @observable isLoading = false\n  @observable hasMore = true\n  @observable page = 0\n  limit = 10\n\n  @action append(newList) {\n    this.list = this.list.concat(newList)\n  }\n\n  @action find() {\n    this.isLoading = true\n    Uploader.find({page: this.page, limit: this.limit})\n      .then(newList => {\n        this.append(newList)\n        if (newList.length < this.limit) {\n          this.hasMore = false\n        }\n      })\n      .catch(err => message.error('加载数据失败'))\n      .finally(() => {\n        this.isLoading = false\n      })\n  }\n\n  @action reset() {\n    this.list = []\n    this.isLoading = false\n    this.hasMore = true\n    this.page = 0\n  }\n}\n\nexport default new HistoryStore()\n","/Users/marshall/Desktop/epic-react/epic/src/stores/auth.js",[],"/Users/marshall/Desktop/epic-react/epic/src/stores/user.js",[],"/Users/marshall/Desktop/epic-react/epic/src/models/index.js",["104","105"],"import AV, {Query, User} from 'leancloud-storage'\nimport resolve from 'resolve'\n\nAV.init({\n  appId: 'NMaRGoaksIqBex94eqsQm1t5-gzGzoHsz',\n  appKey: 'HROcGnttJRHfwLsFD4gyRsRo',\n  serverURL: 'https://nmargoak.lc-cn-n1-shared.com'\n})\n\nconst Auth = {\n  // 如果不是用的leanCloud，这里的代码可以替换成ajax请求，一样的\n  register(username, password) {\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n\n  login(username, password) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n  logout() {\n    User.logOut()\n  },\n  getCurrentUser() {\n    return User.current()\n  }\n}\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(filename, file)\n    item.set('filename', filename)\n    item.set('owner', AV.User.current())\n    item.set('url', avFile)\n    return new Promise((resolve, reject) => {\n      item.save().then(serverfile => resolve(serverfile), err => reject(err))\n    })\n  },\n  find({page = 0, limit = 10}) {\n    const query = new AV.Query('Image')\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page * limit)\n    query.descending('createAt')\n    // 只能查询自己的文件\n    query.equalTo('owner', AV.User.current())\n    return new Promise((resolve, reject) => {\n      query.find()\n        .then((result) => {\n          resolve(result)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n}\n\nexport {\n  // 先把这一个API暴露出去，后边有再加\n  Auth,\n  Uploader\n}",{"ruleId":"106","severity":1,"message":"107","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"111","line":1,"column":30,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":11,"endColumn":2},{"ruleId":"106","severity":1,"message":"115","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":104,"column":21,"nodeType":"118","messageId":"119","endLine":105,"endColumn":83,"fix":"120"},{"ruleId":"116","severity":1,"message":"117","line":119,"column":19,"nodeType":"118","messageId":"119","endLine":119,"endColumn":59,"fix":"121"},{"ruleId":"122","severity":1,"message":"123","line":27,"column":6,"nodeType":"124","endLine":27,"endColumn":8,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"117","line":48,"column":19,"nodeType":"118","messageId":"119","endLine":48,"endColumn":80,"fix":"126"},{"ruleId":"106","severity":1,"message":"127","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"127","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"127","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"128","line":1,"column":13,"nodeType":"108","messageId":"109","endLine":1,"endColumn":18},{"ruleId":"106","severity":1,"message":"129","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'User' is assigned a value but never used.","'Checkbox' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"130","text":"131"},{"range":"132","text":"131"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'HistoryStore'. Either include it or remove the dependency array.","ArrayExpression",["133"],{"range":"134","text":"131"},"'React' is defined but never used.","'Query' is defined but never used.","'resolve' is defined but never used.",[2869,2869]," rel=\"noreferrer\"",[3512,3512],{"desc":"135","fix":"136"},[1246,1246],"Update the dependencies array to be: [HistoryStore]",{"range":"137","text":"138"},[598,600],"[HistoryStore]"]