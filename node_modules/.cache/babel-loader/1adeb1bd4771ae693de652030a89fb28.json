{"ast":null,"code":"var path = require('path');\n\nvar parse = path.parse || require('path-parse');\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n  var prefix = '/';\n\n  if (/^([A-Za-z]:)/.test(absoluteStart)) {\n    prefix = '';\n  } else if (/^\\\\\\\\/.test(absoluteStart)) {\n    prefix = '\\\\\\\\';\n  }\n\n  var paths = [absoluteStart];\n  var parsed = parse(absoluteStart);\n\n  while (parsed.dir !== paths[paths.length - 1]) {\n    paths.push(parsed.dir);\n    parsed = parse(parsed.dir);\n  }\n\n  return paths.reduce(function (dirs, aPath) {\n    return dirs.concat(modules.map(function (moduleDir) {\n      return path.resolve(prefix, aPath, moduleDir);\n    }));\n  }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n  var modules = opts && opts.moduleDirectory ? [].concat(opts.moduleDirectory) : ['node_modules'];\n\n  if (opts && typeof opts.paths === 'function') {\n    return opts.paths(request, start, function () {\n      return getNodeModulesDirs(start, modules);\n    }, opts);\n  }\n\n  var dirs = getNodeModulesDirs(start, modules);\n  return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};","map":{"version":3,"sources":["/Users/marshall/Desktop/epic-react/epic/node_modules/resolve/lib/node-modules-paths.js"],"names":["path","require","parse","getNodeModulesDirs","absoluteStart","modules","prefix","test","paths","parsed","dir","length","push","reduce","dirs","aPath","concat","map","moduleDir","resolve","module","exports","nodeModulesPaths","start","opts","request","moduleDirectory"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGF,IAAI,CAACE,KAAL,IAAcD,OAAO,CAAC,YAAD,CAAjC;;AAEA,IAAIE,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,aAA5B,EAA2CC,OAA3C,EAAoD;AACzE,MAAIC,MAAM,GAAG,GAAb;;AACA,MAAK,cAAD,CAAiBC,IAAjB,CAAsBH,aAAtB,CAAJ,EAA0C;AACtCE,IAAAA,MAAM,GAAG,EAAT;AACH,GAFD,MAEO,IAAK,OAAD,CAAUC,IAAV,CAAeH,aAAf,CAAJ,EAAmC;AACtCE,IAAAA,MAAM,GAAG,MAAT;AACH;;AAED,MAAIE,KAAK,GAAG,CAACJ,aAAD,CAAZ;AACA,MAAIK,MAAM,GAAGP,KAAK,CAACE,aAAD,CAAlB;;AACA,SAAOK,MAAM,CAACC,GAAP,KAAeF,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAA3B,EAA+C;AAC3CH,IAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,GAAlB;AACAD,IAAAA,MAAM,GAAGP,KAAK,CAACO,MAAM,CAACC,GAAR,CAAd;AACH;;AAED,SAAOF,KAAK,CAACK,MAAN,CAAa,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACvC,WAAOD,IAAI,CAACE,MAAL,CAAYX,OAAO,CAACY,GAAR,CAAY,UAAUC,SAAV,EAAqB;AAChD,aAAOlB,IAAI,CAACmB,OAAL,CAAab,MAAb,EAAqBS,KAArB,EAA4BG,SAA5B,CAAP;AACH,KAFkB,CAAZ,CAAP;AAGH,GAJM,EAIJ,EAJI,CAAP;AAKH,CApBD;;AAsBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,OAAvC,EAAgD;AAC7D,MAAIpB,OAAO,GAAGmB,IAAI,IAAIA,IAAI,CAACE,eAAb,GACR,GAAGV,MAAH,CAAUQ,IAAI,CAACE,eAAf,CADQ,GAER,CAAC,cAAD,CAFN;;AAIA,MAAIF,IAAI,IAAI,OAAOA,IAAI,CAAChB,KAAZ,KAAsB,UAAlC,EAA8C;AAC1C,WAAOgB,IAAI,CAAChB,KAAL,CACHiB,OADG,EAEHF,KAFG,EAGH,YAAY;AAAE,aAAOpB,kBAAkB,CAACoB,KAAD,EAAQlB,OAAR,CAAzB;AAA4C,KAHvD,EAIHmB,IAJG,CAAP;AAMH;;AAED,MAAIV,IAAI,GAAGX,kBAAkB,CAACoB,KAAD,EAAQlB,OAAR,CAA7B;AACA,SAAOmB,IAAI,IAAIA,IAAI,CAAChB,KAAb,GAAqBM,IAAI,CAACE,MAAL,CAAYQ,IAAI,CAAChB,KAAjB,CAArB,GAA+CM,IAAtD;AACH,CAhBD","sourcesContent":["var path = require('path');\nvar parse = path.parse || require('path-parse');\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n"]},"metadata":{},"sourceType":"script"}