{"ast":null,"code":"import AV,{Query,User}from'leancloud-storage';import resolve from'resolve';AV.init({appId:'NMaRGoaksIqBex94eqsQm1t5-gzGzoHsz',appKey:'HROcGnttJRHfwLsFD4gyRsRo',serverURL:'https://nmargoak.lc-cn-n1-shared.com'});var Auth={// 如果不是用的leanCloud，这里的代码可以替换成ajax请求，一样的\nregister:function register(username,password){var user=new User();user.setUsername(username);user.setPassword(password);return new Promise(function(resolve,reject){user.signUp().then(function(loginedUser){return resolve(loginedUser);},function(error){return reject(error);});});},login:function login(username,password){return new Promise(function(resolve,reject){User.logIn(username,password).then(function(loginedUser){return resolve(loginedUser);},function(error){return reject(error);});});},logout:function logout(){User.logOut();},getCurrentUser:function getCurrentUser(){return User.current();}};var Uploader={add:function add(file,filename){var item=new AV.Object('Image');var avFile=new AV.File(filename,file);item.set('filename',filename);item.set('owner',AV.User.current());item.set('url',avFile);return new Promise(function(resolve,reject){item.save().then(function(serverfile){return resolve(serverfile);},function(err){return reject(err);});});},find:function find(_ref){var _ref$page=_ref.page,page=_ref$page===void 0?0:_ref$page,_ref$limit=_ref.limit,limit=_ref$limit===void 0?10:_ref$limit;var query=new AV.Query('Image');query.include('owner');query.limit(limit);query.skip(page*limit);query.descending('createAt');// 只能查询自己的文件\nquery.equalTo('owner',AV.User.current());return new Promise(function(resolve,reject){query.find().then(function(result){resolve(result);}).catch(function(err){reject(err);});});}};export{// 先把这一个API暴露出去，后边有再加\nAuth,Uploader};","map":{"version":3,"sources":["/Users/marshall/Desktop/epic-react/epic/src/models/index.js"],"names":["AV","Query","User","resolve","init","appId","appKey","serverURL","Auth","register","username","password","user","setUsername","setPassword","Promise","reject","signUp","then","loginedUser","error","login","logIn","logout","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverfile","err","find","page","limit","query","include","skip","descending","equalTo","result","catch"],"mappings":"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","sourcesContent":["import AV, {Query, User} from 'leancloud-storage'\nimport resolve from 'resolve'\n\nAV.init({\n  appId: 'NMaRGoaksIqBex94eqsQm1t5-gzGzoHsz',\n  appKey: 'HROcGnttJRHfwLsFD4gyRsRo',\n  serverURL: 'https://nmargoak.lc-cn-n1-shared.com'\n})\n\nconst Auth = {\n  // 如果不是用的leanCloud，这里的代码可以替换成ajax请求，一样的\n  register(username, password) {\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n\n  login(username, password) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error))\n    })\n  },\n  logout() {\n    User.logOut()\n  },\n  getCurrentUser() {\n    return User.current()\n  }\n}\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(filename, file)\n    item.set('filename', filename)\n    item.set('owner', AV.User.current())\n    item.set('url', avFile)\n    return new Promise((resolve, reject) => {\n      item.save().then(serverfile => resolve(serverfile), err => reject(err))\n    })\n  },\n  find({page = 0, limit = 10}) {\n    const query = new AV.Query('Image')\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page * limit)\n    query.descending('createAt')\n    // 只能查询自己的文件\n    query.equalTo('owner', AV.User.current())\n    return new Promise((resolve, reject) => {\n      query.find()\n        .then((result) => {\n          resolve(result)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n}\n\nexport {\n  // 先把这一个API暴露出去，后边有再加\n  Auth,\n  Uploader\n}"]},"metadata":{},"sourceType":"module"}