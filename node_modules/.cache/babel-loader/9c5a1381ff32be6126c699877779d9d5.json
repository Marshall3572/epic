{"ast":null,"code":"'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n  var nodeParts = current.split('.');\n  var parts = specifier.split(' ');\n  var op = parts.length > 1 ? parts[0] : '=';\n  var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n  for (var i = 0; i < 3; ++i) {\n    var cur = parseInt(nodeParts[i] || 0, 10);\n    var ver = parseInt(versionParts[i] || 0, 10);\n\n    if (cur === ver) {\n      continue; // eslint-disable-line no-restricted-syntax, no-continue\n    }\n\n    if (op === '<') {\n      return cur < ver;\n    }\n\n    if (op === '>=') {\n      return cur >= ver;\n    }\n\n    return false;\n  }\n\n  return op === '>=';\n}\n\nfunction matchesRange(current, range) {\n  var specifiers = range.split(/ ?&& ?/);\n\n  if (specifiers.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < specifiers.length; ++i) {\n    if (!specifierIncluded(current, specifiers[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n  if (typeof specifierValue === 'boolean') {\n    return specifierValue;\n  }\n\n  var current = typeof nodeVersion === 'undefined' ? process.versions && process.versions.node && process.versions.node : nodeVersion;\n\n  if (typeof current !== 'string') {\n    throw new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n  }\n\n  if (specifierValue && typeof specifierValue === 'object') {\n    for (var i = 0; i < specifierValue.length; ++i) {\n      if (matchesRange(current, specifierValue[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n  return has(data, x) && versionIncluded(nodeVersion, data[x]);\n};","map":{"version":3,"sources":["/Users/marshall/Desktop/epic-react/epic/node_modules/is-core-module/index.js"],"names":["has","require","specifierIncluded","current","specifier","nodeParts","split","parts","op","length","versionParts","i","cur","parseInt","ver","matchesRange","range","specifiers","versionIncluded","nodeVersion","specifierValue","process","versions","node","TypeError","data","module","exports","isCore","x"],"mappings":"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","sourcesContent":["'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n"]},"metadata":{},"sourceType":"script"}