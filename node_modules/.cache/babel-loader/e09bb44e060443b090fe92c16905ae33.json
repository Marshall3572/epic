{"ast":null,"code":"import _initializerDefineProperty from \"/Users/marshall/Desktop/epic-react/epic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/marshall/Desktop/epic-react/epic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/marshall/Desktop/epic-react/epic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport React from 'react';\nimport { Uploader } from '../models';\nimport { message } from 'antd';\nimport { action, observable } from 'mobx';\nlet HistoryStore = (_class = class HistoryStore {\n  constructor() {\n    _initializerDefineProperty(this, \"list\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"hasMore\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"page\", _descriptor4, this);\n\n    this.limit = 10;\n  }\n\n  append(newList) {\n    this.list = this.list.concat(newList);\n  }\n\n  find() {\n    this.isLoading = true;\n    Uploader.find({\n      page: this.page,\n      limit: this.limit\n    }).then(newList => {\n      this.append(newList);\n\n      if (newList.length < this.limit) {\n        this.hasMore = false;\n      }\n    }).catch(err => message.error('加载数据失败')).finally(() => {\n      this.isLoading = false;\n    });\n  }\n\n  reset() {\n    this.list = [];\n    this.isLoading = false;\n    this.hasMore = true;\n    this.page = 0;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"list\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"hasMore\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"page\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"append\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"append\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"find\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"find\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"reset\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"reset\"), _class.prototype)), _class);\nexport default new HistoryStore();","map":{"version":3,"sources":["/Users/marshall/Desktop/epic-react/epic/src/stores/history.js"],"names":["React","Uploader","message","action","observable","HistoryStore","limit","append","newList","list","concat","find","isLoading","page","then","length","hasMore","catch","err","error","finally","reset"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,MAAjC;IAEMC,Y,aAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAKjBC,KALiB,GAKT,EALS;AAAA;;AAOTC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACtB,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,MAAV,CAAiBF,OAAjB,CAAZ;AACD;;AAEOG,EAAAA,IAAI,GAAG;AACb,SAAKC,SAAL,GAAiB,IAAjB;AACAX,IAAAA,QAAQ,CAACU,IAAT,CAAc;AAACE,MAAAA,IAAI,EAAE,KAAKA,IAAZ;AAAkBP,MAAAA,KAAK,EAAE,KAAKA;AAA9B,KAAd,EACGQ,IADH,CACQN,OAAO,IAAI;AACf,WAAKD,MAAL,CAAYC,OAAZ;;AACA,UAAIA,OAAO,CAACO,MAAR,GAAiB,KAAKT,KAA1B,EAAiC;AAC/B,aAAKU,OAAL,GAAe,KAAf;AACD;AACF,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIhB,OAAO,CAACiB,KAAR,CAAc,QAAd,CAPhB,EAQGC,OARH,CAQW,MAAM;AACb,WAAKR,SAAL,GAAiB,KAAjB;AACD,KAVH;AAWD;;AAEOS,EAAAA,KAAK,GAAG;AACd,SAAKZ,IAAL,GAAY,EAAZ;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACA,SAAKI,OAAL,GAAe,IAAf;AACA,SAAKH,IAAL,GAAY,CAAZ;AACD;;AA/BgB,C,sEAChBT,U;;;;;WAAkB,E;;6EAClBA,U;;;;;WAAuB,K;;2EACvBA,U;;;;;WAAqB,I;;wEACrBA,U;;;;;WAAkB,C;;2DAGlBD,M,wIAIAA,M,uIAeAA,M;AAQH,eAAe,IAAIE,YAAJ,EAAf","sourcesContent":["import React from 'react'\nimport {Uploader} from '../models'\nimport {message} from 'antd'\nimport {action, observable} from 'mobx'\n\nclass HistoryStore {\n  @observable list = []\n  @observable isLoading = false\n  @observable hasMore = true\n  @observable page = 0\n  limit = 10\n\n  @action append(newList) {\n    this.list = this.list.concat(newList)\n  }\n\n  @action find() {\n    this.isLoading = true\n    Uploader.find({page: this.page, limit: this.limit})\n      .then(newList => {\n        this.append(newList)\n        if (newList.length < this.limit) {\n          this.hasMore = false\n        }\n      })\n      .catch(err => message.error('加载数据失败'))\n      .finally(() => {\n        this.isLoading = false\n      })\n  }\n\n  @action reset() {\n    this.list = []\n    this.isLoading = false\n    this.hasMore = true\n    this.page = 0\n  }\n}\n\nexport default new HistoryStore()\n"]},"metadata":{},"sourceType":"module"}